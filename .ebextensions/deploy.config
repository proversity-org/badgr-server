#
# Deploy to AWS ElasticBeanstalk
#

packages:
    yum:
        git: []
        libjpeg-turbo: []
        zlib-devel: []
        openldap-devel: []
        cyrus-sasl-devel: []
        swig: []
        libxslt-devel: []
        libtool: []
        libffi-devel: []
    rubygems:
        sass: '3.4.23'

commands:
    01_node_install:
        cwd: /tmp
        test: '[ ! -f /usr/bin/node ] && echo "node not installed"'
        command: 'yum install -y nodejs --enablerepo=epel'
    02_npm_install:
        cwd: /tmp
        test: '[ ! -f /usr/bin/npm ] && echo "npm not installed"'
        command: 'curl -L http://npmjs.org/install.sh | sh'
    03_node_update:
        cwd: /tmp
        test: '[ ! -f /usr/bin/n ] && echo "node not updated"'
        command: 'npm install -g n && n stable'
    04_grunt_install:
        cwd: /tmp
        test: '[ ! -f /usr/bin/grunt ] && echo "grunt not installed"'
        command: 'npm install -g grunt-cli'


option_settings:
    "aws:elasticbeanstalk:application:environment":
        # your settings module here
        DJANGO_SETTINGS_MODULE: "apps.mainsite.settings"

        # add the path to the root of your django app
        # note that this is the path on the target machine
        # EB will deploy your application in /opt/python/current/app on the target machines
        PYTHONPATH: "/opt/python/current/app/apps/mainsite:$PYTHONPATH"

        # add path to ruby gems
        PATH: "/opt/elasticbeanstalk/lib/ruby/bin/:$PATH"

    "aws:elasticbeanstalk:container:python":
        # path to your wsgi.py file from the root folder of your application
        WSGIPath: apps/mainsite/wsgi.py
        NumProcesses: 3
        NumThreads: 20

    "aws:elasticbeanstalk:container:python:staticfiles":
        "/static/": "breakdown/static/"


# These commands will be run just before the application is started
container_commands:

    01_migrate:
        command: 'python manage.py migrate --noinput'
        leader_only: true

    02_createadmin:
        command: 'python manage.py createadmin'
        leader_only: true

    # You can define a build script in packages.json (using gulp, grunt...) to build your client side files
    03_npm_build:
        command: 'npm install && npm run build'

    04_collectstatic:
        command: 'python manage.py collectstatic --noinput'

    05_logs:
        command: 'mkdir -p /opt/python/current/app/logs/ && chmod 0777 -R /opt/python/current/app/logs/'